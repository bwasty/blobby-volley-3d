vertex_program camTexShader glsl
{
	source simpleCamTexAndLighting.vert //source simpleCamTex.vert
	syntax vp30
}

fragment_program simpleFragShader glsl
{
	source simpleFrag.frag
	syntax fp30
}

material blobb_material
{
	receive_shadows off
	technique
	{
		pass
		{
			//TODO: alpha was 0.701841, make opaque for now
			ambient 0.000000 0.00000 1.00000 1.00000
			diffuse 0.000000 0.000000 1.000000 1.00000
			specular 1.000000 1.000000 1.000000 1.00000 25.00000
			emissive 0.000000 0.000000 0.000000 1.00000
			//scene_blend alpha_blend
			//depth_write off
			

			texture_unit
			{
				//texture_alias cameraTex
				texture simpleLensGradient.png
				filtering bilinear
			}
			
			vertex_program_ref camTexShader
			{
				//param_named cameraTex int 0
			}
			
			//fragment_program_ref simpleFragShader 
			//{
			//}
			
		}
	}
}

material blobb_green : blobb_material {
	technique
	{
		pass
		{
			ambient 0.000000 1.00000 0.00000 1.00000
			diffuse 0.000000 1.000000 0.000000 1.00000
		}
	}
}
