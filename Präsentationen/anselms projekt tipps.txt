von SharedObj erben, und SO pointer verwenden
konsistente namenskovention: mMember, dateinamen(header einheitlich!)
using namespace vermeiden, VRS:: verwenden
VRS_Cast oder C++ casts statt C casts verwenden
members private, methoden protected
members gruppieren (nicht doppelte zugriffsattribute in aufeinanderfolgenden blöcken verwenden)
static const statt #define für konstanten verwenden
func() {static var;...}	// speed!
default werte in constructor argument liste setzen: ctor(int i = 4, ...)
<Template1<Template2> > (leerzeichen zwischen schließenden klammern wegen compiler)
virtuelle konstruktoren verwenden
header so spät wie möglich einbinden; prototyping verwenden
NACHNUTZUNG KENNZEICHNEN!!
evtl VRSError/Warning/ArgCheck verwenden